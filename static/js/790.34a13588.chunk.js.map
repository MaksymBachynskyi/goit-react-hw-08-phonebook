{"version":3,"file":"static/js/790.34a13588.chunk.js","mappings":"uOAIe,SAASA,IAAa,IAADC,EAAAC,EAC5BC,GAAWC,EAAAA,EAAAA,MACjBC,GAKIC,EAAAA,EAAAA,IAAQ,CAAEC,KAAM,WAJlBC,EAAQH,EAARG,SACAC,EAAYJ,EAAZI,aACAC,EAAKL,EAALK,MAAKC,EAAAN,EACLO,UAAaC,EAAMF,EAANE,OAAQC,EAAOH,EAAPG,QAOvB,OACEC,EAAAA,EAAAA,KAAA,OAAAC,UACEC,EAAAA,EAAAA,MAAA,QAAMC,SAAUT,GAPH,SAAAU,GACfhB,GAASiB,EAAAA,EAAAA,IAAUD,IACnBT,GACF,IAI2CM,SAAA,EACrCC,EAAAA,EAAAA,MAAA,SAAAD,SAAA,CAAO,SAELD,EAAAA,EAAAA,KAAA,SAAAM,EAAAA,EAAAA,GAAA,GACMb,EAAS,QAAS,CACpBc,SAAU,iBAEVC,QAAS,CACPC,MAAO,sBAKfT,EAAAA,EAAAA,KAAA,OAAAC,UAAY,OAANH,QAAM,IAANA,OAAM,EAANA,EAAQY,SAASV,EAAAA,EAAAA,KAAA,KAAAC,UAAU,OAANH,QAAM,IAANA,GAAa,QAAPZ,EAANY,EAAQY,aAAK,IAAAxB,OAAP,EAANA,EAAeyB,UAAW,aACrDT,EAAAA,EAAAA,MAAA,SAAAD,SAAA,CAAO,YAELD,EAAAA,EAAAA,KAAA,SAAAM,EAAAA,EAAAA,GAAA,GACMb,EAAS,WAAY,CACvBc,SAAU,iBACVK,UAAW,CACTH,MAAO,EACPE,QAAS,iCAKjBX,EAAAA,EAAAA,KAAA,OAAAC,UACS,OAANH,QAAM,IAANA,OAAM,EAANA,EAAQe,YAAYb,EAAAA,EAAAA,KAAA,KAAAC,UAAU,OAANH,QAAM,IAANA,GAAgB,QAAVX,EAANW,EAAQe,gBAAQ,IAAA1B,OAAV,EAANA,EAAkBwB,UAAW,aAGxDX,EAAAA,EAAAA,KAAA,SAAOc,KAAK,SAASC,UAAWhB,QAIxC,CCnDe,SAASiB,IACtB,OACEhB,EAAAA,EAAAA,KAAA,OAAAC,UACED,EAAAA,EAAAA,KAACf,EAAS,KAGhB,C","sources":["components/loginForm.jsx","pages.js/login.js"],"sourcesContent":["import { useForm } from 'react-hook-form';\nimport { useDispatch } from 'react-redux';\nimport { logInUser } from 'redux/operation';\n\nexport default function LoginForm() {\n  const dispatch = useDispatch();\n  const {\n    register,\n    handleSubmit,\n    reset,\n    formState: { errors, isValid },\n  } = useForm({ mode: 'onBlur' });\n  const onSubmit = data => {\n    dispatch(logInUser(data));\n    reset();\n  };\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit(onSubmit)}>\n        <label>\n          Email\n          <input\n            {...register('email', {\n              required: 'Required field',\n\n              pattern: {\n                value: /^\\S+@\\S+$/i,\n              },\n            })}\n          ></input>\n        </label>\n        <div>{errors?.email && <p>{errors?.email?.message || 'Error'}</p>}</div>\n        <label>\n          Password\n          <input\n            {...register('password', {\n              required: 'Required field',\n              minLength: {\n                value: 7,\n                message: 'Password is too short',\n              },\n            })}\n          ></input>\n        </label>\n        <div>\n          {errors?.password && <p>{errors?.password?.message || 'Error'}</p>}\n        </div>\n\n        <input type=\"submit\" disabled={!isValid} />\n      </form>\n    </div>\n  );\n}\n","import LoginForm from 'components/loginForm';\n\nexport default function Login() {\n  return (\n    <div>\n      <LoginForm />\n    </div>\n  );\n}\n"],"names":["LoginForm","_errors$email","_errors$password","dispatch","useDispatch","_useForm","useForm","mode","register","handleSubmit","reset","_useForm$formState","formState","errors","isValid","_jsx","children","_jsxs","onSubmit","data","logInUser","_objectSpread","required","pattern","value","email","message","minLength","password","type","disabled","Login"],"sourceRoot":""}